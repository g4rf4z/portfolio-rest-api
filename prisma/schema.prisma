generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstname String
  lastname  String
  nickname  String    @unique
  email     String    @unique
  password  String
  role      AdminRole @default(GUEST)
  isActive  Boolean   @default(true)

  sessions Session[]

  @@map("admins")
}

enum AdminRole {
  SUPERADMIN
  ADMIN
  USER
  GUEST
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstname String
  lastname  String
  email     String   @unique
  nickname  String   @unique
  password  String
  role      UserRole @default(USER)
  isActive  Boolean  @default(true)

  AdminSession Session[]

  @@map("users")
}

enum UserRole {
  USER
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type      AccountType
  isActive  Boolean     @default(true)
  userAgent String?

  admin   Admin? @relation(fields: [ownerId], references: [id])
  user    User?  @relation(fields: [ownerId], references: [id])
  ownerId String @db.ObjectId

  @@map("sessions")
}

enum AccountType {
  ADMIN
  USER
}

model ResetPasswordToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  expiresAt DateTime

  type    AccountType
  token   String      @unique
  ownerId String
  isValid Boolean     @default(true)

  @@map("reset_password_tokens")
}

model Skill {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name       String
  icon       String
  iconWeight String
  iconColor  String
  progress   Int

  @@map("skills")
}

model Experience {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  position String
  company  String
  city     String
  country  String
  from     String
  to       String
  tasks    String

  @@map("experiences")
}
